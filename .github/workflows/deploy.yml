name: Deploy to AWS

on:
  push:
    branches:
    - master
    - staging
    paths:
    - 'src/**'
    - 'infra/**'
  pull_request:
    branches:
    - master
    - staging
    paths:
    - 'src/**'
    - 'infra/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        cd src
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt --target .; fi
    - name: Build a package
      run: |
        zip -r9 payload.zip .
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1

    - name: Move to infra directory
      run: cd ../infra

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Pull Request - Add Plan to PR
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
      script: |
        const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
        #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
        #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
        #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
        <details><summary>Show Plan</summary>
      
        \`\`\`${process.env.PLAN}\`\`\`
      
        </details>
      
        *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
        github.issues.createComment({
          issue_number: context.issue.number,
          owner: context.repo.owner,
          repo: context.repo.repo,
          body: output
        })
    - name: Apply terraform
      